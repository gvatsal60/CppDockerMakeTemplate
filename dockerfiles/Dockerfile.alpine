# Use Alpine Linux as the base image
FROM alpine:3.19 AS base

# Metadata indicating the maintainer of this Dockerfile
LABEL MAINTAINER="gvatsal60"
# Description of the purpose of this image
LABEL DESCRIPTION="Build Environment"

ARG USERNAME=nonroot

# Update and install necessary packages
RUN apk update && \
    apk upgrade && \
    # Install necessary tools
    apk add --no-cache \
    build-base \
    clang \
    cmake \
    git \
    gtest \
    gtest-dev \
    net-tools \
    openjdk11 \
    openssl \
    openssl-dev \
    python3 \
    xz \
    # Clean up
    && rm -rf /var/cache/apk/* \
    # Create a non-root user
    && adduser -D ${USERNAME}

# Install gtest
FROM base AS gtest
ARG GTEST_VER=v1.15.2
ARG SRC=/usr/local/src/google-test-${GTEST_VER}
ADD https://github.com/google/googletest/archive/${GTEST_VER}.tar.gz ${SRC}
RUN set -x && \
    cd "${SRC}" && \
    tar xz -C "${SRC}" --strip-components=1 && \
    # Create build directory and compile gtest
    mkdir build && \
    cd build && \
    cmake .. && \
    make -j$(nproc) && make install DESTDIR=/opt/gtest

# Build Final Image
FROM base AS build

# Copy gtest binaries from the gtest stage
COPY --from=gtest /opt/gtest /

# Set environment variables for locale
ENV LC_ALL=en_US.UTF-8
ENV LANG=en_US.UTF-8
ENV LANGUAGE=en_US.UTF-8

# Copy non-root user from base image
COPY --from=base /etc/passwd /etc/passwd
COPY --from=base /etc/group /etc/group

# Switch to non-root user
USER ${USERNAME}

# Define the default command to run when the container starts
ENTRYPOINT ["/bin/ash", "-c"]
