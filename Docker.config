# Docker/Podman Specific

# Default Docker host to use, if not specified.
DOCKER_HOST?=docker

# UID (User ID) for the Docker container. Defaults to current user's UID.
DOCKER_UID?= $(shell id -u)

# GID (Group ID) for the Docker container. Defaults to current user's GID.
DOCKER_GID?= $(shell id -g)

# Name of the Docker image based on the repository root directory name.
DOCKER_IMG_NAME?=$(shell basename `git rev-parse --show-toplevel`)

# Version of the Docker image, derived from Git tags.
DOCKER_IMG_VER?=$(shell git describe --tags --always --dirty)

# Full name of the Docker image including name and version.
DOCKER_IMG_FULL_NAME?=$(DOCKER_IMG_NAME):$(DOCKER_IMG_VER)

# Flags to pass to `docker build` for building the dependencies image.
DOCKER_DEPS_IMAGE_BUILD_FLAGS?=--no-cache=true

# Arguments to pass to the Docker command for setting user and mounting volumes.
DOCKER_USER_ARG?= --user $(DOCKER_UID):$(DOCKER_GID)

# Path to the source code on the host machine.
LOCAL_SOURCE_PATH?=$(shell pwd)

# Directory to work within the Docker container.
DOCKER_WORK_DIR?= $(DOCKER_IMG_NAME)

# Volume mount configuration for Docker container.
DOCKER_VOL?= --mount type=bind,source=$(LOCAL_SOURCE_PATH),target=$(DOCKER_WORK_DIR)

# Arguments to pass to the Docker command for building the image.
DOCKER_ARG?= DOCKER_BUILDKIT=1 --init --rm -it $(DOCKER_USER_ARG) $(DOCKER_VOL) -w $(DOCKER_WORK_DIR)

# Check if the Docker container with dependencies is running.
IF_CONTAINER_RUNS=$(shell docker container inspect -f '{{.State.Running}}' ${DOCKER_DEPS_CONTAINER} 2>/dev/null)
